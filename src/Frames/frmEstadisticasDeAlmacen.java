/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import Clases.Producto;
import Clases.Usuario;
import ClasesListas.*;
import Controladores.ControladorData;
import Controladores.PlaceHolder;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.text.DecimalFormat;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.ListIterator;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

public class frmEstadisticasDeAlmacen extends javax.swing.JFrame {

    ControladorData cd;
    ListaDeAlmacenes listaDeAlmacenes;
    private DefaultTableModel dtmTablaDeProductos;
    private DefaultTableModel dtmTablaDeUsuarios;
    Object[][] data = {};
    String headerProducto[] = {"CODIGO DE PRODUCTO", "ESTADO", "CANTIDAD", "CATEGORIA", "NOMBRE DE PRODUCTO", "PRECIO UNITARIO",
        "ALMACEN", "DESTINO", "FECHA DE REGISTRO", "FECHA DE ENTREGA", "CODIGO DE USUARIO", "PRECIO TOTAL"
    };
    String headerUsuario[] = {"CODIGO DE USUARIO", "NOMBRE DE USUARIO", "TELEFONO"};
    NodoAlmacen almacenEncontrado;

    public frmEstadisticasDeAlmacen() {
        initComponents();
        /*PROCESOS OPERATIVOS*/
        cd = new ControladorData();
        listaDeAlmacenes = cd.instanciarListaAlmacenes();
        dtmTablaDeProductos = new DefaultTableModel();
        dtmTablaDeProductos.setDataVector(data, headerProducto);
        jtblProducto.setModel(dtmTablaDeProductos);
        dtmTablaDeUsuarios = new DefaultTableModel(data, headerUsuario);
        jtblUsuario.setModel(dtmTablaDeUsuarios);
        /*OPERACIONES DE APOYO*/
        setBackground(new Color(0, 0, 0, 0));
        setLocationRelativeTo(null);
        establecerRadioCheck();
        escalarImagenes();
        setPlaceHolder();
        setTitle("ESTADISTICAS DE ALMACEN");
    }

    private void establecerRadioCheck() {
        jrbInicioFIn.setSelected(true);
        jcbProducto.setSelected(true);
        jcbUsuario.setSelected(true);
    }

    private void escalarImagenes() {
        rsscalelabel.RSScaleLabel.setScaleLabel(jlabelAlmacen, "src/imagenes/imgGestionAlmacen.jpg");
    }

    private void setPlaceHolder() {
        PlaceHolder ph;
        ph = new PlaceHolder("Cantidad de productos", jtxtCantidadDeProducto);
        ph = new PlaceHolder("Cantidad de usuarios", jtxtCantidadDeUsuarios);
        ph = new PlaceHolder("ingresos del almacen", jtxtIngresosPorAlmacen);
        ph = new PlaceHolder("Codigo del almacen", jtxtCodigoDeAlmacen);
        ph = new PlaceHolder("Nombre del almacen", jtxtNombreDelAlmacen);
        ph = new PlaceHolder("Categoria m√°s demandada", jtxtCategoriaMasDemanda);
        ph = new PlaceHolder("Nombre del usuario con mayor importe", jtxtUsuarioConMayorImporte);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbgOrientacionDeLaData = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jpanelCircularCategoria = new javax.swing.JPanel();
        jbtnInicio = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblProducto = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtblUsuario = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jtxtIngresosPorAlmacen = new javax.swing.JTextField();
        jpanelBarras = new javax.swing.JPanel();
        jpanelGraficoLineal = new javax.swing.JPanel();
        jbSalir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jbtnConsultar = new javax.swing.JButton();
        jcbxAlmacen = new javax.swing.JComboBox<>();
        jrbFinInicio = new javax.swing.JRadioButton();
        jcbProducto = new javax.swing.JCheckBox();
        jcbUsuario = new javax.swing.JCheckBox();
        jrbInicioFIn = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jlabelAlmacen = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jtxtCantidadDeProducto = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jtxtCantidadDeUsuarios = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jtxtCodigoDeAlmacen = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jtxtNombreDelAlmacen = new javax.swing.JTextField();
        jbtnRestaurar = new javax.swing.JButton();
        jbtnActualizar = new javax.swing.JButton();
        jbtnEliminar = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jtxtUsuarioConMayorImporte = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jtxtCategoriaMasDemanda = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jbCerrarSesion = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpanelCircularCategoria.setBackground(new java.awt.Color(215, 215, 215));
        jpanelCircularCategoria.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jpanelCircularCategoriaLayout = new javax.swing.GroupLayout(jpanelCircularCategoria);
        jpanelCircularCategoria.setLayout(jpanelCircularCategoriaLayout);
        jpanelCircularCategoriaLayout.setHorizontalGroup(
            jpanelCircularCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 358, Short.MAX_VALUE)
        );
        jpanelCircularCategoriaLayout.setVerticalGroup(
            jpanelCircularCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );

        jPanel2.add(jpanelCircularCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, 360, 300));

        jbtnInicio.setBackground(new java.awt.Color(149, 16, 43));
        jbtnInicio.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        jbtnInicio.setForeground(new java.awt.Color(255, 255, 255));
        jbtnInicio.setText("INICIO");
        jbtnInicio.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnInicioActionPerformed(evt);
            }
        });
        jPanel2.add(jbtnInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 720, 300, 60));

        jtblProducto.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jtblProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtblProducto.setRowHeight(30);
        jScrollPane1.setViewportView(jtblProducto);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 250, 810, 120));

        jtblUsuario.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jtblUsuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtblUsuario.setRowHeight(30);
        jScrollPane3.setViewportView(jtblUsuario);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 380, 810, 120));

        jPanel5.setBackground(new java.awt.Color(215, 215, 215));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "MONTO GENERADO POR EL ALMACEN", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Semilight", 0, 14))); // NOI18N
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtxtIngresosPorAlmacen.setBackground(new java.awt.Color(215, 215, 215));
        jtxtIngresosPorAlmacen.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jtxtIngresosPorAlmacen.setBorder(null);
        jPanel5.add(jtxtIngresosPorAlmacen, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 480, 40));

        jPanel2.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 170, 550, 70));

        jpanelBarras.setBackground(new java.awt.Color(215, 215, 215));
        jpanelBarras.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jpanelBarrasLayout = new javax.swing.GroupLayout(jpanelBarras);
        jpanelBarras.setLayout(jpanelBarrasLayout);
        jpanelBarrasLayout.setHorizontalGroup(
            jpanelBarrasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 738, Short.MAX_VALUE)
        );
        jpanelBarrasLayout.setVerticalGroup(
            jpanelBarrasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 258, Short.MAX_VALUE)
        );

        jPanel2.add(jpanelBarras, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 740, 260));

        jpanelGraficoLineal.setBackground(new java.awt.Color(215, 215, 215));
        jpanelGraficoLineal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jpanelGraficoLinealLayout = new javax.swing.GroupLayout(jpanelGraficoLineal);
        jpanelGraficoLineal.setLayout(jpanelGraficoLinealLayout);
        jpanelGraficoLinealLayout.setHorizontalGroup(
            jpanelGraficoLinealLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 358, Short.MAX_VALUE)
        );
        jpanelGraficoLinealLayout.setVerticalGroup(
            jpanelGraficoLinealLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );

        jPanel2.add(jpanelGraficoLineal, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 350, 360, 300));

        jbSalir.setBackground(new java.awt.Color(255, 255, 255));
        jbSalir.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 24)); // NOI18N
        jbSalir.setText("X");
        jbSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });
        jPanel2.add(jbSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(1530, 0, 50, -1));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("ORIENTACI√ìN DE LA INFORMACI√ìN");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 70, -1, 20));

        jbtnConsultar.setBackground(new java.awt.Color(149, 16, 43));
        jbtnConsultar.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        jbtnConsultar.setForeground(new java.awt.Color(255, 255, 255));
        jbtnConsultar.setText("CONSULTAR");
        jbtnConsultar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnConsultarActionPerformed(evt);
            }
        });
        jPanel2.add(jbtnConsultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 710, 210, 60));

        jcbxAlmacen.setBackground(new java.awt.Color(215, 215, 215));
        jcbxAlmacen.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jcbxAlmacen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Almacen Centro", "Almacen Norte", "Almacen Oeste", "Almacen Sur", "Almacen Este" }));
        jcbxAlmacen.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ALMACEN", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Semilight", 1, 18))); // NOI18N
        jcbxAlmacen.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel2.add(jcbxAlmacen, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 70, 280, 80));

        jbgOrientacionDeLaData.add(jrbFinInicio);
        jrbFinInicio.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jrbFinInicio.setText("Fin a Inicio");
        jrbFinInicio.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jrbFinInicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jrbFinInicioMouseClicked(evt);
            }
        });
        jPanel2.add(jrbFinInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(1450, 120, 120, -1));

        jcbProducto.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jcbProducto.setText("Producto");
        jcbProducto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.add(jcbProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(1450, 90, 120, -1));

        jcbUsuario.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jcbUsuario.setText("Usuario");
        jcbUsuario.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.add(jcbUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 90, 120, -1));

        jbgOrientacionDeLaData.add(jrbInicioFIn);
        jrbInicioFIn.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jrbInicioFIn.setText("Inicio a Fin");
        jrbInicioFIn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jrbInicioFIn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jrbInicioFInMouseClicked(evt);
            }
        });
        jPanel2.add(jrbInicioFIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 120, 120, -1));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("SEGUIMIENTO SEG√öN EL ALMACEN");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1580, 60));

        jlabelAlmacen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/imgGestionAlmacen.jpg"))); // NOI18N
        jlabelAlmacen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.add(jlabelAlmacen, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 70, 250, 170));

        jPanel6.setBackground(new java.awt.Color(215, 215, 215));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "CANTIDAD DE PRODUCTO", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Semilight", 0, 14))); // NOI18N
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtxtCantidadDeProducto.setBackground(new java.awt.Color(215, 215, 215));
        jtxtCantidadDeProducto.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jtxtCantidadDeProducto.setBorder(null);
        jPanel6.add(jtxtCantidadDeProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 230, 40));

        jPanel2.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 580, 260, 70));

        jPanel7.setBackground(new java.awt.Color(215, 215, 215));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "CANTIDAD DE USUARIOS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Semilight", 0, 14))); // NOI18N
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtxtCantidadDeUsuarios.setBackground(new java.awt.Color(215, 215, 215));
        jtxtCantidadDeUsuarios.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jtxtCantidadDeUsuarios.setBorder(null);
        jPanel7.add(jtxtCantidadDeUsuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 230, 40));

        jPanel2.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 510, 260, 70));

        jPanel8.setBackground(new java.awt.Color(215, 215, 215));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "CODIGO DE ALMACEN", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Semilight", 0, 14))); // NOI18N
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtxtCodigoDeAlmacen.setBackground(new java.awt.Color(215, 215, 215));
        jtxtCodigoDeAlmacen.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jtxtCodigoDeAlmacen.setBorder(null);
        jPanel8.add(jtxtCodigoDeAlmacen, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 230, 40));

        jPanel2.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1300, 580, 270, 70));

        jPanel9.setBackground(new java.awt.Color(215, 215, 215));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "NOMBRE DEL ALMACEN", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Semilight", 0, 14))); // NOI18N
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtxtNombreDelAlmacen.setBackground(new java.awt.Color(215, 215, 215));
        jtxtNombreDelAlmacen.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jtxtNombreDelAlmacen.setBorder(null);
        jPanel9.add(jtxtNombreDelAlmacen, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 230, 40));

        jPanel2.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(1300, 510, 270, 70));

        jbtnRestaurar.setBackground(new java.awt.Color(149, 16, 43));
        jbtnRestaurar.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        jbtnRestaurar.setForeground(new java.awt.Color(255, 255, 255));
        jbtnRestaurar.setText("RESTAURAR");
        jbtnRestaurar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnRestaurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnRestaurarActionPerformed(evt);
            }
        });
        jPanel2.add(jbtnRestaurar, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 710, 210, 60));

        jbtnActualizar.setBackground(new java.awt.Color(149, 16, 43));
        jbtnActualizar.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        jbtnActualizar.setForeground(new java.awt.Color(255, 255, 255));
        jbtnActualizar.setText("ACTUALIZAR");
        jbtnActualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnActualizarActionPerformed(evt);
            }
        });
        jPanel2.add(jbtnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 710, 210, 60));

        jbtnEliminar.setBackground(new java.awt.Color(149, 16, 43));
        jbtnEliminar.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        jbtnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        jbtnEliminar.setText("ELIMINAR");
        jbtnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEliminarActionPerformed(evt);
            }
        });
        jPanel2.add(jbtnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 710, 210, 60));

        jPanel10.setBackground(new java.awt.Color(215, 215, 215));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "USUARIO CON MAYOR IMPORTE", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Semilight", 0, 14))); // NOI18N
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtxtUsuarioConMayorImporte.setBackground(new java.awt.Color(215, 215, 215));
        jtxtUsuarioConMayorImporte.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jtxtUsuarioConMayorImporte.setBorder(null);
        jPanel10.add(jtxtUsuarioConMayorImporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 230, 40));

        jPanel2.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 510, 280, 70));

        jPanel11.setBackground(new java.awt.Color(215, 215, 215));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "CATEGORIA M√ÅS DEMANDADA", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Semilight", 0, 14))); // NOI18N
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtxtCategoriaMasDemanda.setBackground(new java.awt.Color(215, 215, 215));
        jtxtCategoriaMasDemanda.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jtxtCategoriaMasDemanda.setBorder(null);
        jPanel11.add(jtxtCategoriaMasDemanda, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 230, 40));

        jPanel2.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 580, 280, 70));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 1580, 790));

        jPanel1.setBackground(new java.awt.Color(149, 16, 43));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1260, 740, 40, 40));

        jbCerrarSesion.setBackground(new java.awt.Color(255, 255, 255));
        jbCerrarSesion.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jbCerrarSesion.setForeground(new java.awt.Color(255, 255, 255));
        jbCerrarSesion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jbCerrarSesion.setText("CERRAR SESI√ìN");
        jbCerrarSesion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbCerrarSesion.setFocusable(false);
        jbCerrarSesion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbCerrarSesionMouseClicked(evt);
            }
        });
        jPanel1.add(jbCerrarSesion, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 750, 270, -1));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("RENZO COSTA S.A.C.");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 750, 1200, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, 1570, 790));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbCerrarSesionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbCerrarSesionMouseClicked
        dispose();
        frmLogueo logueo = new frmLogueo();
        logueo.setVisible(true);
    }//GEN-LAST:event_jbCerrarSesionMouseClicked

    private void jbtnInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnInicioActionPerformed
        frmInicio inicio = new frmInicio();
        inicio.setVisible(true);
        dispose();
    }//GEN-LAST:event_jbtnInicioActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbtnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnConsultarActionPerformed
        String ubicacionDelAlmacen = jcbxAlmacen.getSelectedItem().toString();
        if (jrbInicioFIn.isSelected()) {
            cd.sobreEscribirEnTablaDeProductosSegunAlmacenInicioFin(dtmTablaDeProductos, ubicacionDelAlmacen);
            cd.sobreEscribirEnTablaDeUsuariosSegunAlmacenDeInicioFin(dtmTablaDeUsuarios, ubicacionDelAlmacen);
        } else {
            cd.sobreEscribirEnTablaDeProductosSegunAlmacenFinInicio(dtmTablaDeProductos, ubicacionDelAlmacen);
            cd.sobreEscribirEnTablaDeUsuariosSegunAlmacenDeFinInicio(dtmTablaDeUsuarios, ubicacionDelAlmacen);
        }
        habilitar();
        jtxtUsuarioConMayorImporte.setText(calcularUsuarioConMayorImporte(ubicacionDelAlmacen));
        graficarBarras(ubicacionDelAlmacen);
        graficarFuncionLineal(ubicacionDelAlmacen);
        calcularDatos(ubicacionDelAlmacen);
        graficarPieChart(ubicacionDelAlmacen);
    }//GEN-LAST:event_jbtnConsultarActionPerformed

    private void jrbInicioFInMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jrbInicioFInMouseClicked
        String ubicacionDelAlmacen = jcbxAlmacen.getSelectedItem().toString();
        if (!jcbProducto.isSelected() && !jcbUsuario.isSelected()) {
            cd.sobreEscribirEnTablaDeProductosSegunAlmacenInicioFin(dtmTablaDeProductos, ubicacionDelAlmacen);
            cd.sobreEscribirEnTablaDeUsuariosSegunAlmacenDeInicioFin(dtmTablaDeUsuarios, ubicacionDelAlmacen);
        }
        if (jcbProducto.isSelected() && jcbUsuario.isSelected()) {
            cd.sobreEscribirEnTablaDeProductosSegunAlmacenInicioFin(dtmTablaDeProductos, ubicacionDelAlmacen);
            cd.sobreEscribirEnTablaDeUsuariosSegunAlmacenDeInicioFin(dtmTablaDeUsuarios, ubicacionDelAlmacen);
        }
        if (jcbProducto.isSelected()) {
            cd.sobreEscribirEnTablaDeProductosSegunAlmacenInicioFin(dtmTablaDeProductos, ubicacionDelAlmacen);
        }
        if (jcbUsuario.isSelected()) {
            cd.sobreEscribirEnTablaDeUsuariosSegunAlmacenDeInicioFin(dtmTablaDeUsuarios, ubicacionDelAlmacen);
        }
    }//GEN-LAST:event_jrbInicioFInMouseClicked

    private void jrbFinInicioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jrbFinInicioMouseClicked
        String ubicacionDelAlmacen = jcbxAlmacen.getSelectedItem().toString();
        if (!jcbProducto.isSelected() && !jcbUsuario.isSelected()) {
            cd.sobreEscribirEnTablaDeProductosSegunAlmacenFinInicio(dtmTablaDeProductos, ubicacionDelAlmacen);
            cd.sobreEscribirEnTablaDeUsuariosSegunAlmacenDeFinInicio(dtmTablaDeUsuarios, ubicacionDelAlmacen);
        }
        if (jcbProducto.isSelected() && jcbUsuario.isSelected()) {
            cd.sobreEscribirEnTablaDeProductosSegunAlmacenFinInicio(dtmTablaDeProductos, ubicacionDelAlmacen);
            cd.sobreEscribirEnTablaDeUsuariosSegunAlmacenDeFinInicio(dtmTablaDeUsuarios, ubicacionDelAlmacen);
        }
        if (jcbProducto.isSelected()) {
            cd.sobreEscribirEnTablaDeProductosSegunAlmacenFinInicio(dtmTablaDeProductos, ubicacionDelAlmacen);
        }
        if (jcbUsuario.isSelected()) {
            cd.sobreEscribirEnTablaDeUsuariosSegunAlmacenDeFinInicio(dtmTablaDeUsuarios, ubicacionDelAlmacen);
        }

    }//GEN-LAST:event_jrbFinInicioMouseClicked

    private void jbtnRestaurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnRestaurarActionPerformed
        deshabilitar();
        limpiarFrm();
    }//GEN-LAST:event_jbtnRestaurarActionPerformed

    private void jbtnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnActualizarActionPerformed
        String ubicacionDeAlmacen = jcbxAlmacen.getSelectedItem().toString();
        almacenEncontrado = buscarAlmacen(ubicacionDeAlmacen);
        almacenEncontrado.almacen.codigo = jtxtCodigoDeAlmacen.getText();
        almacenEncontrado.almacen.nombre = jtxtNombreDelAlmacen.getText();
        cd.sobreEscribirArchivoAlmacen(listaDeAlmacenes);
        deshabilitar();
        limpiarFrm();
    }//GEN-LAST:event_jbtnActualizarActionPerformed

    private void jbtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEliminarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbtnEliminarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        deshabilitar();
    }//GEN-LAST:event_formWindowOpened

    private void limpiarFrm() {
        jtxtCantidadDeProducto.setText("");
        jtxtCantidadDeUsuarios.setText("");
        jtxtCodigoDeAlmacen.setText("");
        jtxtIngresosPorAlmacen.setText("");
        jtxtNombreDelAlmacen.setText("");
        jtxtUsuarioConMayorImporte.setText("");
        jtxtCategoriaMasDemanda.setText("");
        jcbxAlmacen.requestFocus();
        jpanelBarras.removeAll();
        jpanelBarras.add(limpiarPanel(jpanelBarras.getWidth(), getHeight()));
        jpanelCircularCategoria.removeAll();
        jpanelCircularCategoria.add(limpiarPanel(jpanelCircularCategoria.getWidth(), jpanelCircularCategoria.getHeight()));
        jpanelGraficoLineal.removeAll();
        jpanelGraficoLineal.add(limpiarPanel(jpanelGraficoLineal.getWidth(), jpanelGraficoLineal.getHeight()));
        dtmTablaDeProductos.setRowCount(0);
        dtmTablaDeUsuarios.setRowCount(0);
        repaint();
    }

    private JPanel limpiarPanel(int width, int height) {
        JPanel jp = new JPanel();
        jp.setSize(width, height);
        jp.setBackground(new Color(215, 215, 215));
        return jp;
    }

    private NodoAlmacen buscarAlmacen(String ubicacionAlmacen) {
        NodoAlmacen auxiliar = listaDeAlmacenes.inicio;
        while (auxiliar != null && !(auxiliar.almacen.ubicacion.equalsIgnoreCase(ubicacionAlmacen))) {
            auxiliar = auxiliar.siguiente;
        }
        return auxiliar;
    }

    private void habilitar() {
        jbtnActualizar.setEnabled(true);
        jbtnEliminar.setEnabled(true);
    }

    private void deshabilitar() {
        jbtnActualizar.setEnabled(false);
        jbtnEliminar.setEnabled(false);
    }

    private void calcularDatos(String ubicacionDelAlmacen) {
        NodoAlmacen nodoAlmacen = listaDeAlmacenes.buscarNodoEspec√≠fico(ubicacionDelAlmacen);
        LinkedList<Usuario> listaUsuarioPorAlmacen = cd.instanciarLinkedListUsuarioPorAlmacen(ubicacionDelAlmacen);
        LinkedList<Producto> listaProducto = nodoAlmacen.almacen.listaDeProductos;
        ListIterator<Producto> itProducto = listaProducto.listIterator();
        DecimalFormat df = new DecimalFormat("####.00");
        String categoriaM√°sDemandaPorAlmacen;

        int cantidadDeUsuarios = listaUsuarioPorAlmacen.size();
        int cantidadDeProductos = listaProducto.size();
        double ingresosAcumuladosDelAlmacen = 0;
        String nombreAlmacen = nodoAlmacen.almacen.nombre.toUpperCase();
        String codigoAlmacen = nodoAlmacen.almacen.codigo;

        while (itProducto.hasNext()) {
            ingresosAcumuladosDelAlmacen += itProducto.next().calcularPrecioDeUnTipoDeProducto();
        }
        categoriaM√°sDemandaPorAlmacen = calcularCategoriaMasDemanda(ubicacionDelAlmacen);

        jtxtCategoriaMasDemanda.setText(categoriaM√°sDemandaPorAlmacen);
        jtxtCodigoDeAlmacen.setText(codigoAlmacen);
        jtxtNombreDelAlmacen.setText(nombreAlmacen);
        jtxtCantidadDeProducto.setText(String.valueOf(cantidadDeProductos + " productos"));
        jtxtCantidadDeUsuarios.setText(String.valueOf(cantidadDeUsuarios + " usuarios"));
        jtxtIngresosPorAlmacen.setText("$/. " + df.format(ingresosAcumuladosDelAlmacen));

    }

    private String calcularCategoriaMasDemanda(String ubicacionDelAlmacen) {
        String categoria = "";
        LinkedList<Usuario> listaUsuarioPorAlmacen = cd.instanciarLinkedListUsuarioPorAlmacen(ubicacionDelAlmacen);
        Iterator<Usuario> itUsuario = listaUsuarioPorAlmacen.iterator();
        Usuario u = new Usuario();
        int cantidadCalzado = 0, cantidadCasaca = 0, cantidadBilletera = 0,
                cantidadCartera = 0, cantidadMochila = 0, cantidadCorreas = 0, cantidadAccesorio = 0;
        int elMasDemandado = -99999;
        // Calzado, Casaca, Billeteras, Carteras, Mochilas, Correas, Accesorios
        while (itUsuario.hasNext()) {
            u = itUsuario.next();
            cantidadCalzado += perteneceALaCategoria(u, ubicacionDelAlmacen,"Calzado");
            cantidadCasaca += perteneceALaCategoria(u, ubicacionDelAlmacen, "Casaca");
            cantidadBilletera += perteneceALaCategoria(u, ubicacionDelAlmacen, "Billeteras");
            cantidadCartera += perteneceALaCategoria(u, ubicacionDelAlmacen, "Carteras");
            cantidadMochila += perteneceALaCategoria(u, ubicacionDelAlmacen, "Mochilas");
            cantidadCorreas += perteneceALaCategoria(u, ubicacionDelAlmacen, "Correas");
            cantidadAccesorio += perteneceALaCategoria(u, ubicacionDelAlmacen, "Accesorios");
        }
        if (cantidadCalzado > elMasDemandado) {
            elMasDemandado = cantidadCalzado;
            categoria = "Calzado";
        }
        if (cantidadCasaca > elMasDemandado) {
            elMasDemandado = cantidadCasaca;
            categoria = "Casaca";
        }
        if (cantidadBilletera > elMasDemandado) {
            elMasDemandado = cantidadBilletera;
            categoria = "Billeteras";
        }
        if (cantidadCartera > elMasDemandado) {
            elMasDemandado = cantidadCartera;
            categoria = "Carteras";
        }
        if (cantidadMochila > elMasDemandado) {
            elMasDemandado = cantidadMochila;
            categoria = "Mochilas";
        }
        if (cantidadCorreas > elMasDemandado) {
            elMasDemandado = cantidadCorreas;
            categoria = "Correas";
        }
        if (cantidadAccesorio > elMasDemandado) {
            elMasDemandado = cantidadAccesorio;
            categoria = "Accesorios";
        }
        return categoria;
    }

    private int perteneceALaCategoria(Usuario u, String ubicacionDelAlmacen, String categoria) {
        if (u.calcularCategoriaMasSolicitada(ubicacionDelAlmacen).equalsIgnoreCase(categoria)) {
            return 1;
        } else {
            return 0;
        }
    }

    private String calcularUsuarioConMayorImporte(String ubicacionAlmacen) {
        String nombre = "";
        double maximoImporte = -99999;
        double sueldoTotalPorUsuario;
        LinkedList<Usuario> listaUsuario = cd.instanciarLinkedListUsuarioPorAlmacen(ubicacionAlmacen);
        Iterator<Usuario> itUsuario = listaUsuario.iterator();
        Iterator<Producto> itProducto;
        LinkedList<Producto> listaProducto;
        DecimalFormat df = new DecimalFormat("####.00");

        while (itUsuario.hasNext()) {
            Usuario u = itUsuario.next();
            listaProducto = u.getListaDeProductos();
            itProducto = listaProducto.iterator();
            sueldoTotalPorUsuario = 0;

            while (itProducto.hasNext()) {
                Producto p = itProducto.next();
                if (p.getAlmacen().equalsIgnoreCase(ubicacionAlmacen)) {
                    sueldoTotalPorUsuario += p.calcularPrecioDeUnTipoDeProducto();
                }
            }
            if (sueldoTotalPorUsuario > maximoImporte) {
                maximoImporte = sueldoTotalPorUsuario;
                nombre = u.getNombre().toUpperCase();
            }
        }
        return nombre + " CON $/. " + df.format(maximoImporte);
    }

    private void graficarPieChart(String ubicacionDelAlmacen) {
        jpanelCircularCategoria.removeAll();
        LinkedList<Usuario> listaDeUsuariosPorAlmacen = cd.instanciarLinkedListUsuarioPorAlmacen(ubicacionDelAlmacen);
        Iterator<Usuario> itUsuario = listaDeUsuariosPorAlmacen.iterator();

        DefaultPieDataset datos = new DefaultPieDataset();

        while (itUsuario.hasNext()) {
            Usuario usuario = itUsuario.next();
            int cantidades = calcularProductoDeUnaAlmacen(ubicacionDelAlmacen, usuario);
            datos.setValue(usuario.getNombre().toUpperCase(), cantidades);
        }

        JFreeChart freeChartCircular = ChartFactory.createPieChart3D(
                "CANTIDAD GENERAL SOLICITADA POR CLIENTE",
                datos,
                true,
                true,
                false
        );

        ChartPanel panelCircular = new ChartPanel(freeChartCircular);
        panelCircular.setMouseWheelEnabled(true);
        panelCircular.setPreferredSize(new Dimension(jpanelCircularCategoria.getWidth(), jpanelCircularCategoria.getHeight()));
        jpanelCircularCategoria.setLayout(new BorderLayout());
        jpanelCircularCategoria.add(panelCircular);

        pack();
        repaint();
    }

    private int calcularProductoDeUnaAlmacen(String ubicacionDelAlmacen, Usuario u) {
        int contador = 0;
        LinkedList<Producto> listaProductos = u.getListaDeProductos();
        Iterator<Producto> itProducto = listaProductos.iterator();
        while (itProducto.hasNext()) {
            if (itProducto.next().getAlmacen().equalsIgnoreCase(ubicacionDelAlmacen)) {
                contador++;
            }
        }
        return contador;
    }

    private void graficarBarras(String ubicacionDelAlmacen) {
        jpanelBarras.removeAll();
        LinkedList<Usuario> listaUsuarioPorAlmacen = cd.instanciarLinkedListUsuarioPorAlmacen(ubicacionDelAlmacen);
        Iterator<Usuario> itUsuario = listaUsuarioPorAlmacen.iterator();
        LinkedList<Producto> listaProductoIndividuales;

        DefaultCategoryDataset dato = new DefaultCategoryDataset();

        while (itUsuario.hasNext()) {
            Usuario usuario = itUsuario.next();
            listaProductoIndividuales = usuario.getListaDeProductos();
            guardarCantidadesDeTodosLosProductoDeUnUsuario(dato, usuario, ubicacionDelAlmacen);
        }

        JFreeChart graficoBarras = ChartFactory.createBarChart3D(
                "CANTIDAD DE PRODUCTO SEGUN CATEGORIA DE LOS USUARIOS",
                "CLIENTES DE RENZO COSTA",
                "CANTIDAD SOLICITADA",
                dato,
                PlotOrientation.VERTICAL,
                true,
                true,
                false
        );

        ChartPanel panelChartBarra = new ChartPanel(graficoBarras);
        panelChartBarra.setMouseWheelEnabled(true);
        panelChartBarra.setPreferredSize(new Dimension(jpanelBarras.getWidth(), jpanelBarras.getHeight()));
        jpanelBarras.setLayout(new BorderLayout());
        jpanelBarras.add(panelChartBarra, BorderLayout.NORTH);

        pack();
        repaint();
    }

    private void guardarCantidadesDeTodosLosProductoDeUnUsuario(DefaultCategoryDataset dataset, Usuario u, String ubicacionAlmacen) {
        LinkedList<Producto> listaProductos = u.getListaDeProductos();
        Iterator<Producto> itProducto = listaProductos.iterator();

        int calzado = 0, casaca = 0, billeteras = 0, carteras = 0, mochilas = 0, correas = 0, accesorios = 0;
        calzado = calcularCantidadDeProducto(listaProductos, "Calzado", ubicacionAlmacen);
        casaca = calcularCantidadDeProducto(listaProductos, "Casaca", ubicacionAlmacen);
        billeteras = calcularCantidadDeProducto(listaProductos, "Billeteras", ubicacionAlmacen);
        mochilas = calcularCantidadDeProducto(listaProductos, "Mochilas", ubicacionAlmacen);
        correas = calcularCantidadDeProducto(listaProductos, "Correas", ubicacionAlmacen);
        accesorios = calcularCantidadDeProducto(listaProductos, "Accesorios", ubicacionAlmacen);

        dataset.setValue(calzado, "CALZADO", u.getNombre().toUpperCase());
        dataset.setValue(casaca, "CASACA", u.getNombre().toUpperCase());
        dataset.setValue(billeteras, "BILLETERAS", u.getNombre().toUpperCase());
        dataset.setValue(mochilas, "MOCHILAS", u.getNombre().toUpperCase());
        dataset.setValue(correas, "CORREAS", u.getNombre().toUpperCase());
        dataset.setValue(accesorios, "ACCESORIOS", u.getNombre().toUpperCase());
    }

    private int calcularCantidadDeProducto(LinkedList<Producto> lista, String categoria, String ubicacionAlmacen) {
        int contador = 0;
        Iterator<Producto> itProducto = lista.iterator();
        while (itProducto.hasNext()) {
            Producto p = itProducto.next();
            if (p.getCategoria().equalsIgnoreCase(categoria) && p.getAlmacen().equalsIgnoreCase(ubicacionAlmacen)) {
                contador++;
            }
        }
        return contador;
    }

    private void graficarFuncionLineal(String ubicacionDelAlmacen) {
        jpanelGraficoLineal.removeAll();
        LinkedList<Usuario> listaDeUsuariosPorAlmacen = cd.instanciarLinkedListUsuarioPorAlmacen(ubicacionDelAlmacen);
        Iterator<Usuario> itUsuario = listaDeUsuariosPorAlmacen.iterator();
        int numeroDeCliente = 0;
        /**/
        XYSeries series = new XYSeries("COSTOS");

        while (itUsuario.hasNext()) {
            numeroDeCliente++;
            Usuario u = itUsuario.next();
            series.add(numeroDeCliente, u.calcularPrecioTotalPorAlmacen(ubicacionDelAlmacen));
        }

        XYSeriesCollection oDataSet = new XYSeriesCollection();
        oDataSet.addSeries(series);

        JFreeChart oChart = ChartFactory.createXYLineChart(
                "Numero de Clientes vs Costos",
                "Numero de Cliente",
                "Costos Totale",
                oDataSet,
                PlotOrientation.VERTICAL,
                true,
                true,
                false
        );

        ChartPanel oPanel = new ChartPanel(oChart);
        oPanel.setSize(new Dimension(jpanelGraficoLineal.getWidth(), jpanelGraficoLineal.getHeight()));
        oPanel.setMouseWheelEnabled(true);
        jpanelGraficoLineal.setLayout(new BorderLayout());
        jpanelGraficoLineal.add(oPanel, BorderLayout.NORTH);
        pack();
        repaint();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmEstadisticasDeAlmacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmEstadisticasDeAlmacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmEstadisticasDeAlmacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmEstadisticasDeAlmacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmEstadisticasDeAlmacen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel jbCerrarSesion;
    private javax.swing.JButton jbSalir;
    private javax.swing.ButtonGroup jbgOrientacionDeLaData;
    private javax.swing.JButton jbtnActualizar;
    private javax.swing.JButton jbtnConsultar;
    private javax.swing.JButton jbtnEliminar;
    private javax.swing.JButton jbtnInicio;
    private javax.swing.JButton jbtnRestaurar;
    private javax.swing.JCheckBox jcbProducto;
    private javax.swing.JCheckBox jcbUsuario;
    private javax.swing.JComboBox<String> jcbxAlmacen;
    private javax.swing.JLabel jlabelAlmacen;
    private javax.swing.JPanel jpanelBarras;
    private javax.swing.JPanel jpanelCircularCategoria;
    private javax.swing.JPanel jpanelGraficoLineal;
    private javax.swing.JRadioButton jrbFinInicio;
    private javax.swing.JRadioButton jrbInicioFIn;
    private javax.swing.JTable jtblProducto;
    private javax.swing.JTable jtblUsuario;
    private javax.swing.JTextField jtxtCantidadDeProducto;
    private javax.swing.JTextField jtxtCantidadDeUsuarios;
    private javax.swing.JTextField jtxtCategoriaMasDemanda;
    private javax.swing.JTextField jtxtCodigoDeAlmacen;
    private javax.swing.JTextField jtxtIngresosPorAlmacen;
    private javax.swing.JTextField jtxtNombreDelAlmacen;
    private javax.swing.JTextField jtxtUsuarioConMayorImporte;
    // End of variables declaration//GEN-END:variables
}
